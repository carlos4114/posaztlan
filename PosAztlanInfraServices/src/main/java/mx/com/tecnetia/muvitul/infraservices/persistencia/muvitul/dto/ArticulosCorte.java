package mx.com.tecnetia.muvitul.infraservices.persistencia.muvitul.dto;
// Generated 14-abr-2017 14:25:39 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * MovimientoInventario generated by hbm2java
 */
@Entity
@Table(name = "articulos_corte", catalog = "muvitul")
public class ArticulosCorte implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2125072180805299682L;
	private Integer idArticuloCorte;
	private Articulo articulo;
	private Usuario usuario;
	private long existenciaFisica;
	private long existenciaSistema;
	private Integer estatusConteo;
	private Date fecha;
	private PuntoVenta puntoVenta;
	private Date ultimaModificacion;
	private Usuario usuarioModificacion;	
	
	public ArticulosCorte(Integer idArticuloCorte, Articulo articulo, Usuario usuario, long existenciaFisica,
			long existenciaSistema, Integer estatusConteo, Date fecha, PuntoVenta puntoVenta, Date ultimaModificacion,
			Usuario usuarioModificacion) {
		super();
		this.idArticuloCorte = idArticuloCorte;
		this.articulo = articulo;
		this.usuario = usuario;
		this.existenciaFisica = existenciaFisica;
		this.existenciaSistema = existenciaSistema;
		this.estatusConteo = estatusConteo;
		this.fecha = fecha;
		this.puntoVenta = puntoVenta;
		this.ultimaModificacion = ultimaModificacion;
		this.usuarioModificacion = usuarioModificacion;
	}

	public ArticulosCorte() {
		super();
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_articulo_corte", unique = true, nullable = false)
	public Integer getIdArticuloCorte() {
		return idArticuloCorte;
	}

	public void setIdArticuloCorte(Integer idArticuloCorte) {
		this.idArticuloCorte = idArticuloCorte;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_articulo", nullable = false)
	public Articulo getArticulo() {
		return this.articulo;
	}

	public void setArticulo(Articulo articulo) {
		this.articulo = articulo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usuario", nullable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}
	
	@Column(name = "existencia_fisica", nullable = false)
	public long getExistenciaFisica() {
		return existenciaFisica;
	}
	
	public void setExistenciaFisica(long existenciaFisica) {
		this.existenciaFisica = existenciaFisica;
	}

	@Column(name = "existencia_sistema", nullable = false)
	public long getExistenciaSistema() {
		return existenciaSistema;
	}

	public void setExistenciaSistema(long existenciaSistema) {
		this.existenciaSistema = existenciaSistema;
	}
	
	@Column(name = "estatus_conteo", nullable = false)
	public Integer getEstatusConteo() {
		return estatusConteo;
	}
	
	public void setEstatusConteo(Integer estatusConteo) {
		this.estatusConteo = estatusConteo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha", nullable = false, length = 10)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_punto_venta", nullable = false)
	public PuntoVenta getPuntoVenta() {
		return puntoVenta;
	}

	public void setPuntoVenta(PuntoVenta puntoVenta) {
		this.puntoVenta = puntoVenta;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ultima_modificacion", nullable = false, length = 10)
	public Date getUltimaModificacion() {
		return this.ultimaModificacion;
	}

	public void setUltimaModificacion(Date ultimaModificacion) {
		this.ultimaModificacion = ultimaModificacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usuario_modificacion", nullable = false)
	public Usuario getUsuarioModificacion() {
		return this.usuarioModificacion;
	}

	public void setUsuarioModificacion(Usuario usuarioModificacion) {
		this.usuarioModificacion = usuario;
	}
}
