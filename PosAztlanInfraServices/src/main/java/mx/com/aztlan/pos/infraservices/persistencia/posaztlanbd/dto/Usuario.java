package mx.com.aztlan.pos.infraservices.persistencia.posaztlanbd.dto;
// Generated 28-may-2017 1:06:14 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", catalog = "posaztlanbd")
public class Usuario implements java.io.Serializable {

	private Integer idUsuario;
	private Cine cine;
	private EstatusUsuario estatusUsuario;
	private PuntoVenta puntoVenta;
	private Caja caja;
	private String nombre;
	private String paterno;
	private String materno;
	private String correo;
	private String contrasenia;
	private String foto;
	private Set<TicketVenta> ticketVentas = new HashSet<TicketVenta>(0);
	private Set<CorteCaja> corteCajas = new HashSet<CorteCaja>(0);
	private Set<Devolucion> devolucions = new HashSet<Devolucion>(0);
	private Set<PerfilesXUsuario> perfilesXUsuarios = new HashSet<PerfilesXUsuario>(0);
	private Set<CancelacionPago> cancelacionPagos = new HashSet<CancelacionPago>(0);
	private Set<Autorizacion> autorizacions = new HashSet<Autorizacion>(0);
	private Set<MovimientoInventario> movimientoInventarios = new HashSet<MovimientoInventario>(0);
	private Set<Perfil> perfils = new HashSet<Perfil>(0);

	public Usuario() {
	}
	
	public Usuario(Integer idUsuario) {
		this.idUsuario = idUsuario;
	}

	public Usuario(Cine cine, EstatusUsuario estatusUsuario, String nombre, String paterno, String correo,
			String contrasenia) {
		this.cine = cine;
		this.estatusUsuario = estatusUsuario;
		this.nombre = nombre;
		this.paterno = paterno;
		this.correo = correo;
		this.contrasenia = contrasenia;
	}

	public Usuario(Cine cine, EstatusUsuario estatusUsuario, PuntoVenta puntoVenta, String nombre, String paterno,
			String materno, String correo, String contrasenia, String foto, Set<TicketVenta> ticketVentas,
			Set<Devolucion> devolucions, Set<PerfilesXUsuario> perfilesXUsuarios, Set<CancelacionPago> cancelacionPagos,
			Set<Autorizacion> autorizacions, Set<MovimientoInventario> movimientoInventarios) {
		this.cine = cine;
		this.estatusUsuario = estatusUsuario;
		this.puntoVenta = puntoVenta;
		this.nombre = nombre;
		this.paterno = paterno;
		this.materno = materno;
		this.correo = correo;
		this.contrasenia = contrasenia;
		this.foto = foto;
		this.ticketVentas = ticketVentas;
		this.devolucions = devolucions;
		this.perfilesXUsuarios = perfilesXUsuarios;
		this.cancelacionPagos = cancelacionPagos;
		this.autorizacions = autorizacions;
		this.movimientoInventarios = movimientoInventarios;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_usuario", unique = true, nullable = false)
	public Integer getIdUsuario() {
		return this.idUsuario;
	}

	public void setIdUsuario(Integer idUsuario) {
		this.idUsuario = idUsuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_cine", nullable = false)
	public Cine getCine() {
		return this.cine;
	}

	public void setCine(Cine cine) {
		this.cine = cine;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_estatus_usuario", nullable = false)
	public EstatusUsuario getEstatusUsuario() {
		return this.estatusUsuario;
	}

	public void setEstatusUsuario(EstatusUsuario estatusUsuario) {
		this.estatusUsuario = estatusUsuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_punto_venta")
	public PuntoVenta getPuntoVenta() {
		return this.puntoVenta;
	}

	public void setPuntoVenta(PuntoVenta puntoVenta) {
		this.puntoVenta = puntoVenta;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_caja")
	public Caja getCaja() {
		return this.caja;
	}

	public void setCaja(Caja caja) {
		this.caja = caja;
	}

	@Column(name = "nombre", nullable = false, length = 60)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "paterno", nullable = false, length = 50)
	public String getPaterno() {
		return this.paterno;
	}

	public void setPaterno(String paterno) {
		this.paterno = paterno;
	}

	@Column(name = "materno", length = 50)
	public String getMaterno() {
		return this.materno;
	}

	public void setMaterno(String materno) {
		this.materno = materno;
	}

	@Column(name = "correo", nullable = false, length = 45)
	public String getCorreo() {
		return this.correo;
	}

	public void setCorreo(String correo) {
		this.correo = correo;
	}

	@Column(name = "contrasenia", nullable = false, length = 45)
	public String getContrasenia() {
		return this.contrasenia;
	}

	public void setContrasenia(String contrasenia) {
		this.contrasenia = contrasenia;
	}

	@Column(name = "foto", length = 45)
	public String getFoto() {
		return this.foto;
	}

	public void setFoto(String foto) {
		this.foto = foto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<TicketVenta> getTicketVentas() {
		return this.ticketVentas;
	}

	public void setCorteCajas(Set<CorteCaja> corteCajas) {
		this.corteCajas = corteCajas;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<CorteCaja> getCorteCajas() {
		return this.corteCajas;
	}

	public void setTicketVentas(Set<TicketVenta> ticketVentas) {
		this.ticketVentas = ticketVentas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Devolucion> getDevolucions() {
		return this.devolucions;
	}

	public void setDevolucions(Set<Devolucion> devolucions) {
		this.devolucions = devolucions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<PerfilesXUsuario> getPerfilesXUsuarios() {
		return this.perfilesXUsuarios;
	}

	public void setPerfilesXUsuarios(Set<PerfilesXUsuario> perfilesXUsuarios) {
		this.perfilesXUsuarios = perfilesXUsuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<CancelacionPago> getCancelacionPagos() {
		return this.cancelacionPagos;
	}

	public void setCancelacionPagos(Set<CancelacionPago> cancelacionPagos) {
		this.cancelacionPagos = cancelacionPagos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Autorizacion> getAutorizacions() {
		return this.autorizacions;
	}

	public void setAutorizacions(Set<Autorizacion> autorizacions) {
		this.autorizacions = autorizacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<MovimientoInventario> getMovimientoInventarios() {
		return this.movimientoInventarios;
	}

	public void setMovimientoInventarios(Set<MovimientoInventario> movimientoInventarios) {
		this.movimientoInventarios = movimientoInventarios;
	}
	
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "perfiles_x_usuario", catalog = "posaztlanbd", joinColumns = {
			@JoinColumn(name = "id_usuario", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_perfil", nullable = false, updatable = false) })
	public Set<Perfil> getPerfils() {
		return this.perfils;
	}

	public void setPerfils(Set<Perfil> perfils) {
		this.perfils = perfils;
	}

}
