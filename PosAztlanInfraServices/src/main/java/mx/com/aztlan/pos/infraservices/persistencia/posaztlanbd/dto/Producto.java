package mx.com.aztlan.pos.infraservices.persistencia.posaztlanbd.dto;
// Generated 09-jul-2017 19:14:48 by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Producto generated by hbm2java
 */
@Entity
@Table(name = "producto", catalog = "posaztlanbd")
public class Producto implements java.io.Serializable {

	private Integer idProducto;
	private String nombre;
	private String descripcion;
	private byte[] icono;
	private boolean activo;
	private Empresa empresa;
	private BigDecimal precioUnico;
	private Familia familia;
	private Marca marca;
	private TipoProducto tipoProducto;
	private Medida medida;
	private UnidadMedida unidadMedida;
	private boolean nacional;
	private String sku;
	private Set<ProductosXPaquete> productosXPaquetes = new HashSet<ProductosXPaquete>(0);
	private Set<ProductosXTicket> productosXTickets = new HashSet<ProductosXTicket>(0);
	private Set<DetallePromocion> detallePromocions = new HashSet<DetallePromocion>(0);
	private Set<ProductosXPuntoVenta> productosXPuntoVentas = new HashSet<ProductosXPuntoVenta>(0);
	private Set<OrdenCompraDetalle> ordenCompraDetalle = new HashSet<OrdenCompraDetalle>(0);
	//private Set<ProductosXAlmacen> productosXAlmacenes= new HashSet<ProductosXAlmacen>(0);
	private Set<ArticulosXProducto> articulosXProductos = new HashSet<ArticulosXProducto>(0);
	private Set<DevolucionXProducto> devolucionXProductos = new HashSet<DevolucionXProducto>(0);
	private Set<ImpuestoXProducto> impuestoXProductos = new HashSet<ImpuestoXProducto>(0);
	private Set<PrecioXCanal> precioXCanal = new HashSet<PrecioXCanal>(0);
	private Set<MovimientoInventario> movimientoInventarios = new HashSet<MovimientoInventario>(0);
	
	public Producto() {
	}

	public Producto(Integer idProducto) {
		this.idProducto = idProducto;
	}
	
	public Producto(Empresa empresa, String nombre, byte[] icono, boolean activo, BigDecimal precioUnico) {
		this.empresa = empresa;
		this.nombre = nombre;
		this.icono = icono;
		this.activo = activo;
		this.precioUnico = precioUnico;
	}

	public Producto(Empresa empresa, String nombre, byte[] icono, boolean activo, BigDecimal precioUnico,
			Set<ProductosXPaquete> productosXPaquetes, Set<ProductosXTicket> productosXTickets,
			Set<DetallePromocion> detallePromocions, Set<ProductosXPuntoVenta> productosXPuntoVentas,
			Set<ArticulosXProducto> articulosXProductos, Set<DevolucionXProducto> devolucionXProductos,
			Set<ImpuestoXProducto> impuestoXProductos, Set<MovimientoInventario> movimientoInventarios) {
		this.empresa = empresa;
		this.nombre = nombre;
		this.icono = icono;
		this.activo = activo;
		this.precioUnico = precioUnico;
		this.productosXPaquetes = productosXPaquetes;
		this.productosXTickets = productosXTickets;
		this.detallePromocions = detallePromocions;
		this.productosXPuntoVentas = productosXPuntoVentas;
		this.articulosXProductos = articulosXProductos;
		this.devolucionXProductos = devolucionXProductos;
		this.impuestoXProductos = impuestoXProductos;
		this.movimientoInventarios = movimientoInventarios;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_producto", unique = true, nullable = false)
	public Integer getIdProducto() {
		return this.idProducto;
	}

	public void setIdProducto(Integer idProducto) {
		this.idProducto = idProducto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_Empresa", nullable = false)
	public Empresa getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}

	@Column(name = "nombre", nullable = false, length = 200)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "descripcion", nullable = false, length = 250)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}
	
	@Column(name = "icono", nullable = false)
	public byte[] getIcono() {
		return this.icono;
	}

	public void setIcono(byte[] icono) {
		this.icono = icono;
	}

	@Column(name = "nacional", nullable = false)
	public boolean isNacional() {
		return this.nacional;
	}

	public void setNacional(boolean nacional) {
		this.nacional = nacional;
	}
	
	@Column(name = "activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	@Column(name = "precio_unico", nullable = false, precision = 15)
	public BigDecimal getPrecioUnico() {
		return this.precioUnico;
	}

	public void setPrecioUnico(BigDecimal precioUnico) {
		this.precioUnico = precioUnico;
	}

	@Column(name = "sku", nullable = true, length = 45)
	public String getSku() {
		return this.sku;
	}

	public void setSku(String sku) {
		this.sku = sku;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ProductosXPaquete> getProductosXPaquetes() {
		return this.productosXPaquetes;
	}

	public void setProductosXPaquetes(Set<ProductosXPaquete> productosXPaquetes) {
		this.productosXPaquetes = productosXPaquetes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ProductosXTicket> getProductosXTickets() {
		return this.productosXTickets;
	}

	public void setProductosXTickets(Set<ProductosXTicket> productosXTickets) {
		this.productosXTickets = productosXTickets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<DetallePromocion> getDetallePromocions() {
		return this.detallePromocions;
	}

	public void setDetallePromocions(Set<DetallePromocion> detallePromocions) {
		this.detallePromocions = detallePromocions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ProductosXPuntoVenta> getProductosXPuntoVentas() {
		return this.productosXPuntoVentas;
	}

	public void setProductosXPuntoVentas(Set<ProductosXPuntoVenta> productosXPuntoVentas) {
		this.productosXPuntoVentas = productosXPuntoVentas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<OrdenCompraDetalle> getOrdenCompraDetalle() {
		return this.ordenCompraDetalle;
	}

	public void setOrdenCompraDetalle(Set<OrdenCompraDetalle> ordenCompraDetalle) {
		this.ordenCompraDetalle = ordenCompraDetalle;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ArticulosXProducto> getArticulosXProductos() {
		return this.articulosXProductos;
	}

	public void setArticulosXProductos(Set<ArticulosXProducto> articulosXProductos) {
		this.articulosXProductos = articulosXProductos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<DevolucionXProducto> getDevolucionXProductos() {
		return this.devolucionXProductos;
	}

	public void setDevolucionXProductos(Set<DevolucionXProducto> devolucionXProductos) {
		this.devolucionXProductos = devolucionXProductos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ImpuestoXProducto> getImpuestoXProductos() {
		return this.impuestoXProductos;
	}

	public void setImpuestoXProductos(Set<ImpuestoXProducto> impuestoXProductos) {
		this.impuestoXProductos = impuestoXProductos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<PrecioXCanal> getPrecioXCanal() {
		return this.precioXCanal;
	}

	public void setPrecioXCanal(Set<PrecioXCanal> precioXCanal) {
		this.precioXCanal = precioXCanal;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_marca", nullable = false)
	public Marca getMarca() {
		return this.marca;
	}

	public void setMarca(Marca marca) {
		this.marca = marca;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_familia", nullable = false)
	public Familia getFamilia() {
		return this.familia;
	}

	public void setFamilia(Familia familia) {
		this.familia = familia;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_tipo_producto", nullable = false)
	public TipoProducto getTipoProducto() {
		return this.tipoProducto;
	}

	public void setTipoProducto(TipoProducto tipoProducto) {
		this.tipoProducto = tipoProducto;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_medida", nullable = false)
	public Medida getMedida() {
		return this.medida;
	}

	public void setMedida(Medida medida) {
		this.medida = medida;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_unidad_medida", nullable = false)
	public UnidadMedida getUnidadMedida() {
		return this.unidadMedida;
	}

	public void setUnidadMedida(UnidadMedida unidadMedida) {
		this.unidadMedida = unidadMedida;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<MovimientoInventario> getMovimientoInventarios() {
		return this.movimientoInventarios;
	}

	public void setMovimientoInventarios(Set<MovimientoInventario> movimientoInventarios) {
		this.movimientoInventarios = movimientoInventarios;
	}
}
