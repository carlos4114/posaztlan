package mx.com.aztlan.pos.infraservices.persistencia.posaztlanbd.dto;
// Generated 14-abr-2017 14:25:39 by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * MovimientoInventario generated by hbm2java
 */
@Entity
@Table(name = "inventario", catalog = "posaztlanbd")
public class Inventario implements java.io.Serializable {

	private Integer idInventario;
	private Almacen almacen;
	private Proveedor proveedor;
	private Producto producto;	
	private TipoMovimientoInv tipoMovimientoInv;
	private Date fecha;	
	private String lote;
	private long cantidad;	
	private BigDecimal importe;
	private long existenciaActual;	
	private Documento documento;
	private Usuario usuario;
	private Date ultimoMovimiento;
	private Usuario usuarioUltimoMovimiento;
	private OrdenCompra ordenCompra;
	
	public Inventario() {
	}

	public Inventario(Producto producto, TipoMovimientoInv tipoMovimientoInv, Usuario usuario, long cantidad,
			Date fecha, BigDecimal importe, long existenciaActual) {
		this.producto = producto;
		this.tipoMovimientoInv = tipoMovimientoInv;
		this.usuario = usuario;
		this.cantidad = cantidad;
		this.fecha = fecha;
		this.importe = importe;
		this.existenciaActual = existenciaActual;
	}

	public Inventario(Producto producto, Proveedor proveedor, TipoMovimientoInv tipoMovimientoInv,
			Usuario usuario, long cantidad, Date fecha, BigDecimal importe, String documentoRespaldo,
			long existenciaActual, Set<AutorizacionMovimiento> autorizacionMovimientos) {
		this.producto = producto;
		this.proveedor = proveedor;
		this.tipoMovimientoInv = tipoMovimientoInv;
		this.usuario = usuario;
		this.cantidad = cantidad;
		this.fecha = fecha;
		this.importe = importe;
		this.existenciaActual = existenciaActual;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_inventario", unique = true, nullable = false)
	public Integer getIdInventario() {
		return this.idInventario;
	}

	public void setIdInventario(Integer idInventario) {
		this.idInventario = idInventario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_producto", nullable = false)
	public Producto getProducto() {
		return this.producto;
	}

	public void setProducto(Producto producto) {
		this.producto = producto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_proveedor")
	public Proveedor getProveedor() {
		return this.proveedor;
	}

	public void setProveedor(Proveedor proveedor) {
		this.proveedor = proveedor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_tipo_movimiento", nullable = false)
	public TipoMovimientoInv getTipoMovimientoInv() {
		return this.tipoMovimientoInv;
	}

	public void setTipoMovimientoInv(TipoMovimientoInv tipoMovimientoInv) {
		this.tipoMovimientoInv = tipoMovimientoInv;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usuario", nullable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "cantidad", nullable = false)
	public long getCantidad() {
		return this.cantidad;
	}

	public void setCantidad(long cantidad) {
		this.cantidad = cantidad;
	}

	@Column(name = "lote", nullable = true)
	public String getLote() {
		return this.lote;
	}

	public void setLote(String lote) {
		this.lote = lote;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha", nullable = false, length = 19)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Column(name = "importe", nullable = false, precision = 15)
	public BigDecimal getImporte() {
		return this.importe;
	}

	public void setImporte(BigDecimal importe) {
		this.importe = importe;
	}

	@Column(name = "existencia_actual", nullable = false)
	public long getExistenciaActual() {
		return this.existenciaActual;
	}

	public void setExistenciaActual(long existenciaActual) {
		this.existenciaActual = existenciaActual;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_almacen", nullable = false)
	public Almacen getAlmacen() {
		return almacen;
	}

	public void setAlmacen(Almacen almacen) {
		this.almacen = almacen;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_documento", nullable = true)
	public Documento getDocumento() {
		return documento;
	}

	public void setDocumento(Documento documento) {
		this.documento = documento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ultimo_movimiento", nullable = false, length = 19)
	public Date getUltimoMovimiento() {
		return ultimoMovimiento;
	}

	public void setUltimoMovimiento(Date ultimoMovimiento) {
		this.ultimoMovimiento = ultimoMovimiento;
	}	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usuario_ultimo_movimiento", nullable = false)
	public Usuario getUsuarioUltimoMovimiento() {
		return this.usuarioUltimoMovimiento;
	}

	public void setUsuarioUltimoMovimiento(Usuario usuarioUltimoMovimiento) {
		this.usuarioUltimoMovimiento = usuarioUltimoMovimiento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_orden_compra", nullable = true)
	public OrdenCompra getOrdenCompra() {
		return this.ordenCompra;
	}

	public void setOrdenCompra(OrdenCompra ordenCompra) {
		this.ordenCompra = ordenCompra;
	}
}
